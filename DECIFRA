VALORES = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
'.', ',', ';', '!', '?', 'Á', 'Ã', 'À', 'Â', 'É', 'Ê', 'Í', 'Ó', 'Õ', 'Ô', 'Ú', 'Ü', 'Ç']

shift = -44

def decodifica_palavra(palavra, shift):
    palavra_decifrada = ''
    for char in palavra:
        if 0 <= VALORES.index(char) <= 43:
            shifted_char = VALORES[
                ((VALORES.index(char) + shift) % 44) - 1
            ]
            palavra_decifrada += shifted_char
        else:
            palavra_decifrada += char
    return palavra_decifrada

def decodifica_frase(palavras_criptografadas, shift):
    palavras_decodificadas = []
    for palavra in palavras_criptografadas:
        palavras_decodificadas.append(decodifica_palavra(palavra, shift))
    return ' '.join(palavras_decodificadas)

def palavra_existente(palavra):
    for lin in open('dic.txt', encoding='utf-8'):
        if palavra.lower() in lin:
            return True
    return False


texto_criptografado = input('digite o texto para ser decifrado: ')
palavras_criptografadas = texto_criptografado.split('#')


maior_pontuacao, shift_atual = 0, shift     
while shift < 44:
    shift += 1
    pontuacao = 0
    for palavra in palavras_criptografadas:
        palavra_existe = palavra_existente(decodifica_palavra(palavra, shift))
        if palavra_existe:
            pontuacao += 1
    if pontuacao > maior_pontuacao:
        maior_pontuacao, shift_atual = pontuacao, shift

print(decodifica_frase(palavras_criptografadas, shift_atual))
